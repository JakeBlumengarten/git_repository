)+
scale_x_continuous(breaks = seq(250, 500, 25))+
scale_y_continuous(breaks = seq(0,1,0.1))
ggsave("ypg_winpct_corr.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
width = 10,
height = 10,
dpi = 300,
bg = "white")
qbs <- season_24 %>%
filter(!is.na(passer_player_name), !is.na(yards_gained)) %>%
filter(play_type == "pass")%>%
group_by(passer_player_name, passer_player_id, posteam) %>%
summarize(avg_yards = mean(yards_gained), plays = n(), .groups = "drop")%>%
filter(plays > 100, passer_player_name != "")%>%
arrange(desc(avg_yards))
qbs <- qbs %>%
mutate(passer_player_name = fct_reorder(passer_player_name, avg_yards, .desc = TRUE))
top_qbs <- qbs %>%
arrange(desc(avg_yards)) %>%
slice(1:15)
ggplot(top_qbs, aes(x= avg_yards, y= passer_player_id))+
geom_col(aes(color = posteam, fill = posteam), width = 0.5)+
scale_color_nfl(type="secondary")+
scale_fill_nfl(alpha = 0.4)+
theme_minimal()+
labs(
title = "Average Yards by QB",
x = "Average Yards",
subtitle = "Top 15",
caption = "Data: @nflfastR"
)+
theme(
plot.title = element_text(face = "bold"),
plot.tiele.position = "plot",
axis.title.y = element_blank(),
axis.text.y.left = element_nfl_headshot(size = 1)
)+
scale_x_continuous(breaks = seq(1, 10, 1))
ggsave("averageydsqb.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
width = 10,
height = 10,
dpi = 300,
bg = "white")
setwd("/Users/jakeblumengarten/git_repository/nfl_analysis")
ggplot(top_qbs, aes(x= avg_yards, y= passer_player_id))+
geom_col(aes(color = posteam, fill = posteam), width = 0.5)+
scale_color_nfl(type="secondary")+
scale_fill_nfl(alpha = 0.4)+
theme_minimal()+
labs(
title = "Average Yards by QB",
x = "Average Yards",
subtitle = "Top 15",
caption = "Data: @nflfastR"
)+
theme(
plot.title = element_text(face = "bold"),
plot.tiele.position = "plot",
axis.title.y = element_blank(),
axis.text.y.left = element_nfl_headshot(size = 1)
)+
scale_x_continuous(breaks = seq(1, 10, 1))
ggsave("averageydsqb.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
width = 10,
height = 10,
dpi = 300,
bg = "white")
library(ggplot2)
library(gganimate)
ggplot(data, aes(x = yards_per_game, y = winpct, color = team)) +
geom_point(size = 4) +
labs(title = "Week: {frame_time}") +
transition_time(week) +
ease_aes('linear') +
theme_minimal()
install.packages("gganimate")
library(ggplot2)
library(gganimate)
ggplot(data, aes(x = yards_per_game, y = winpct, color = team)) +
geom_point(size = 4) +
labs(title = "Week: {frame_time}") +
transition_time(week) +
ease_aes('linear') +
theme_minimal()
library(ggplot2)
library(gganimate)
ggplot(data, aes(x = yards_per_game, y = winpct, color = posteam)) +
geom_point(size = 4) +
labs(title = "Week: {frame_time}") +
transition_time(week) +
ease_aes('linear') +
theme_minimal()
library(ggplot2)
library(gganimate)
ggplot(yards_pg_pt, aes(x = yards_per_game, y = winpct, color = posteam)) +
geom_point(size = 4) +
labs(title = "Week: {frame_time}") +
transition_time(week) +
ease_aes('linear') +
theme_minimal()
bears_data <- data.frame(
week = 1:10,
yards = c(250, 270, 290, 310, 330, 350, 370, 390, 400, 420)
)
p <- ggplot(bears_data, aes(x = week, y = yards)) +
geom_line(color = "#0B162A", size = 1.2) +
geom_point(color = "#C83803", size = 3) +
labs(title = "Week {frame_time}: Yards Progression",
x = "Week", y = "Total Yards Gained") +
transition_time(week) +
ease_aes('linear') +
theme_minimal()
animate(p, fps = 2, duration = 5, width = 800, height = 600, renderer = gifski_renderer())
bears_data <- data.frame(
week = 1:10,
yards = c(250, 270, 290, 310, 330, 350, 370, 390, 400, 420)
)
p <- ggplot(bears_data, aes(x = week, y = yards)) +
geom_line(color = "#0B162A", size = 1.2) +
geom_point(color = "#C83803", size = 3) +
labs(title = "Week {frame_time}: Yards Progression",
x = "Week", y = "Total Yards Gained") +
transition_time(week) +
ease_aes('linear') +
theme_minimal()
animate(p, fps = 2, duration = 5, width = 800, height = 600, renderer = gifski_renderer())
1
qbs <- season_24 %>%
filter(!is.na(passer_player_name),
!is.na(yards_gained),
play_type == "pass",
plays > 100,
passer_player_name != "") %>%
group_by(passer_player_name, passer_player_id, posteam) %>%
summarize(avg_yards = mean(yards_gained), plays = n(), .groups = "drop")%>%
arrange(desc(avg_yards))
qbs <- qbs %>%
mutate(passer_player_name = fct_reorder(passer_player_name, avg_yards, .desc = TRUE))
top_qbs <- qbs %>%
arrange(desc(avg_yards)) %>%
slice(1:15)
qbs <- season_24 %>%
filter(!is.na(passer_player_name),
!is.na(yards_gained),
play_type == "pass") %>%
group_by(passer_player_name, passer_player_id, posteam) %>%
summarize(avg_yards = mean(yards_gained), plays = n(), .groups = "drop")%>%
filter(plays > 100, passer_player_name != "")%>%
arrange(desc(avg_yards))
qbs <- qbs %>%
mutate(passer_player_name = fct_reorder(passer_player_name, avg_yards, .desc = TRUE))
top_qbs <- qbs %>%
arrange(desc(avg_yards)) %>%
slice(1:15)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(nflplotR)
library(nflreadr)
library(gganimate)
setwd("/Users/jakeblumengarten/git_repository/nfl_analysis")
season_24 <- read.csv("2024.csv")
chicago_bears_24 <- season_24 %>%
filter(posteam == "CHI") %>%
select(week, yards_gained) %>%
group_by(week) %>%
summarize(yards_per_week = sum(yards_gained, na.rm = TRUE))
chicago_bears_24$winperc <- c((1/1), (1/2), (1/3), (2/4), (3/5), (4/6), (4/7), (4/8), (4/9), (4/10), (4/11), (4/12), (4/13), (4/14), (4/15), (4/16), (5/17))
# ðŸ“¦ Team branding positions
wordmarks <- tibble(
x = c(3.5, 17.5),
y = c(100, 400),
team_abbr = "CHI"
)
ggplot(chicago_bears_24, aes(x = week)) +
geom_line(aes(y = yards_per_week), color = "#0B162A", size = 1.2) +
geom_point(aes(y = yards_per_week), color = "#C83803", size = 2) +
geom_line(aes(y = winperc * max(yards_per_week)),
color = "darkgreen", linetype = "dashed", size = 1) +
scale_y_continuous(
name = "Total Yards Gained",
breaks = seq(100, 500, 25),
sec.axis = sec_axis(
trans = ~ . / max(chicago_bears_24$yards_per_week),
name = "Win Percentage",
breaks = seq(0, 1.0, 0.1)
)
) +
scale_x_continuous(breaks = seq(1, 18, 1)) +
labs(
title = "Chicago Bears Offensive Yards & Win Percentage (2024 Season)",
x = "Week",
caption = "Data: @nflfastR\n* Dashed green line scaled to match yardage"
) +
annotate("text", x = 13, y = 250, label = "Eberflus Fired",
color = "#C83803", size = 5, angle = 75) +
annotate("text", x = 7, y = 250, label = "Bye Week",
color = "#C83803", size = 5, angle = 75) +
geom_nfl_wordmarks(data = wordmarks[1, ],
aes(x = x, y = y, team_abbr = team_abbr), width = 0.35) +
geom_nfl_logos(data = wordmarks[2, ],
aes(x = x, y = y, team_abbr = team_abbr), width = 0.1) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title.y.left = element_text(color = "#0B162A", face = "bold"),
axis.title.y.right = element_text(color = "darkgreen", face = "bold")
)
ggsave("chicago_yards_by_week_R.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
plot = teamsypg,
width = 10,
height = 10,
dpi = 300,
bg = "white")
library(forcats)
yards_pg_pt <- season_24 %>%
filter(!is.na(yards_gained), !is.na(posteam)) %>%
filter(!(week %in% 19:22)) %>%
group_by(posteam) %>%
summarize(avgyards = (sum(yards_gained, na.rm = TRUE) / 17), .groups = 'drop') %>%
filter(posteam != "")
yards_pg_pt$winpct <- c(.471, .471, .706, .765, .294, .294, .529, .176, .412, .588, .882, .647, .588, .471, .235, .882, .235, .647, .588, .471, .824, .235, .294, .176, .294, .824, .588, .353, .588, .588, .176, .706)
yards_pg_pt <- yards_pg_pt%>%
mutate(posteam = fct_reorder(posteam, avgyards, .desc = TRUE))
teamsypg <- ggplot(yards_pg_pt, aes(x = avgyards, y = posteam)) +
geom_col(aes(fill = posteam, color = posteam), width = .8) +
geom_nfl_logos(aes(x = 0, y = posteam, team_abbr = posteam),
width = 0.03,
hjust = 0,
vjust = 0.5) +
geom_text(aes(x = 0, y = posteam, label = posteam),
hjust = -0.5,
vjust = 0.5,
nudge_x = max(yards_pg_pt$avgyards, na.rm = TRUE) * 0.03,
color = "white", size = 2.5) +
labs(
x = "Yards Per Game",
y = "Team",
title = "2024 NFL Team Average Yards Per Game",
subtitle = "Data derived from 2024 Season through NFLreadr",
caption = "Data: @nflfastR"
) +
theme_minimal() +
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.title = element_text(face = "bold", hjust = 0),
plot.title.position = "plot",
plot.subtitle = element_text(hjust = 0),
plot.background = element_rect(fill = "white", color = NA),
legend.position = "none"
) +
scale_fill_nfl() +
scale_color_nfl(type = "secondary")
teamsypg
ggsave("teams_ypg.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
plot = teamsypg,
width = 10,
height = 10,
dpi = 300,
bg = "white")
ggplot(yards_pg_pt, aes(x=avgyards, y= winpct))+
geom_point()+
geom_smooth(method = "lm", se = F)+
geom_nfl_logos(aes(team_abbr = posteam), width = 0.065, alpha = 1) +
labs(
x= "Yards Per Game",
y= "Win Percentage",
caption = "Data: @nflfastR",
title = "2024 NFL Correlation Between Avg Yards Per Game and Win Percentage"
)+
theme_minimal()+
theme(
plot.title = element_text(face = "bold"),
plot.title.position = "plot"
)+
scale_x_continuous(breaks = seq(250, 500, 25))+
scale_y_continuous(breaks = seq(0,1,0.1))
ggsave("ypg_winpct_corr.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
width = 10,
height = 10,
dpi = 300,
bg = "white")
qbs <- season_24 %>%
filter(!is.na(passer_player_name),
!is.na(yards_gained),
play_type == "pass") %>%
group_by(passer_player_name, passer_player_id, posteam) %>%
summarize(avg_yards = mean(yards_gained), plays = n(), .groups = "drop")%>%
filter(plays > 100, passer_player_name != "")%>%
arrange(desc(avg_yards))
qbs <- qbs %>%
mutate(passer_player_name = fct_reorder(passer_player_name, avg_yards, .desc = TRUE))
top_qbs <- qbs %>%
arrange(desc(avg_yards)) %>%
slice(1:15)
ggplot(top_qbs, aes(x= avg_yards, y= passer_player_id))+
geom_col(aes(color = posteam, fill = posteam), width = 0.5)+
scale_color_nfl(type="secondary")+
scale_fill_nfl(alpha = 0.4)+
theme_minimal()+
labs(
title = "Average Yards by QB",
x = "Average Yards",
subtitle = "Top 15",
caption = "Data: @nflfastR"
)+
theme(
plot.title = element_text(face = "bold"),
plot.tiele.position = "plot",
axis.title.y = element_blank(),
axis.text.y.left = element_nfl_headshot(size = 1)
)+
scale_x_continuous(breaks = seq(1, 10, 1))
ggsave("averageydsqb.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
width = 10,
height = 10,
dpi = 300,
bg = "white")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(nflplotR)
library(nflreadr)
library(gganimate)
setwd("/Users/jakeblumengarten/git_repository/nfl_analysis")
season_24 <- read.csv("2024.csv")
chicago_bears_24 <- season_24 %>%
filter(posteam == "CHI") %>%
select(week, yards_gained) %>%
group_by(week) %>%
summarize(yards_per_week = sum(yards_gained, na.rm = TRUE))
chicago_bears_24$winperc <- c((1/1), (1/2), (1/3), (2/4), (3/5), (4/6), (4/7), (4/8), (4/9), (4/10), (4/11), (4/12), (4/13), (4/14), (4/15), (4/16), (5/17))
# ðŸ“¦ Team branding positions
wordmarks <- tibble(
x = c(3.5, 17.5),
y = c(100, 400),
team_abbr = "CHI"
)
ggplot(chicago_bears_24, aes(x = week)) +
geom_line(aes(y = yards_per_week), color = "#0B162A", size = 1.2) +
geom_point(aes(y = yards_per_week), color = "#C83803", size = 2) +
geom_line(aes(y = winperc * max(yards_per_week)),
color = "darkgreen", linetype = "dashed", size = 1) +
scale_y_continuous(
name = "Total Yards Gained",
breaks = seq(100, 500, 25),
sec.axis = sec_axis(
trans = ~ . / max(chicago_bears_24$yards_per_week),
name = "Win Percentage",
breaks = seq(0, 1.0, 0.1)
)
) +
scale_x_continuous(breaks = seq(1, 18, 1)) +
labs(
title = "Chicago Bears Offensive Yards & Win Percentage (2024 Season)",
x = "Week",
caption = "Data: @nflfastR\n* Dashed green line scaled to match yardage"
) +
annotate("text", x = 13, y = 250, label = "Eberflus Fired",
color = "#C83803", size = 5, angle = 75) +
annotate("text", x = 7, y = 250, label = "Bye Week",
color = "#C83803", size = 5, angle = 75) +
geom_nfl_wordmarks(data = wordmarks[1, ],
aes(x = x, y = y, team_abbr = team_abbr), width = 0.35) +
geom_nfl_logos(data = wordmarks[2, ],
aes(x = x, y = y, team_abbr = team_abbr), width = 0.1) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title.y.left = element_text(color = "#0B162A", face = "bold"),
axis.title.y.right = element_text(color = "darkgreen", face = "bold")
)
ggsave("chicago_yards_by_week_R.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
plot = teamsypg,
width = 10,
height = 10,
dpi = 300,
bg = "white")
library(forcats)
yards_pg_pt <- season_24 %>%
filter(!is.na(yards_gained), !is.na(posteam)) %>%
filter(!(week %in% 19:22)) %>%
group_by(posteam) %>%
summarize(avgyards = (sum(yards_gained, na.rm = TRUE) / 17), .groups = 'drop') %>%
filter(posteam != "")
yards_pg_pt$winpct <- c(.471, .471, .706, .765, .294, .294, .529, .176, .412, .588, .882, .647, .588, .471, .235, .882, .235, .647, .588, .471, .824, .235, .294, .176, .294, .824, .588, .353, .588, .588, .176, .706)
yards_pg_pt <- yards_pg_pt%>%
mutate(posteam = fct_reorder(posteam, avgyards, .desc = TRUE))
teamsypg <- ggplot(yards_pg_pt, aes(x = avgyards, y = posteam)) +
geom_col(aes(fill = posteam, color = posteam), width = .8) +
geom_nfl_logos(aes(x = 0, y = posteam, team_abbr = posteam),
width = 0.03,
hjust = 0,
vjust = 0.5) +
geom_text(aes(x = 0, y = posteam, label = posteam),
hjust = -0.5,
vjust = 0.5,
nudge_x = max(yards_pg_pt$avgyards, na.rm = TRUE) * 0.03,
color = "white", size = 2.5) +
labs(
x = "Yards Per Game",
y = "Team",
title = "2024 NFL Team Average Yards Per Game",
subtitle = "Data derived from 2024 Season through NFLreadr",
caption = "Data: @nflfastR"
) +
theme_minimal() +
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.title = element_text(face = "bold", hjust = 0),
plot.title.position = "plot",
plot.subtitle = element_text(hjust = 0),
plot.background = element_rect(fill = "white", color = NA),
legend.position = "none"
) +
scale_fill_nfl() +
scale_color_nfl(type = "secondary")
teamsypg
ggsave("teams_ypg.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
plot = teamsypg,
width = 10,
height = 10,
dpi = 300,
bg = "white")
ggplot(yards_pg_pt, aes(x=avgyards, y= winpct))+
geom_point()+
geom_smooth(method = "lm", se = F)+
geom_nfl_logos(aes(team_abbr = posteam), width = 0.065, alpha = 1) +
labs(
x= "Yards Per Game",
y= "Win Percentage",
caption = "Data: @nflfastR",
title = "2024 NFL Correlation Between Avg Yards Per Game and Win Percentage"
)+
theme_minimal()+
theme(
plot.title = element_text(face = "bold"),
plot.title.position = "plot"
)+
scale_x_continuous(breaks = seq(250, 500, 25))+
scale_y_continuous(breaks = seq(0,1,0.1))
ggsave("ypg_winpct_corr.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
width = 10,
height = 10,
dpi = 300,
bg = "white")
qbs <- season_24 %>%
filter(!is.na(passer_player_name),
!is.na(yards_gained),
play_type == "pass") %>%
group_by(passer_player_name, passer_player_id, posteam) %>%
summarize(avg_yards = mean(yards_gained), plays = n(), .groups = "drop")%>%
filter(plays > 100, passer_player_name != "")%>%
arrange(desc(avg_yards))
qbs <- qbs %>%
mutate(passer_player_name = fct_reorder(passer_player_name, avg_yards, .desc = TRUE))
top_qbs <- qbs %>%
arrange(desc(avg_yards)) %>%
slice(1:15)
ggplot(top_qbs, aes(x= avg_yards, y= passer_player_id))+
geom_col(aes(color = posteam, fill = posteam), width = 0.5)+
scale_color_nfl(type="secondary")+
scale_fill_nfl(alpha = 0.4)+
theme_minimal()+
labs(
title = "Average Yards by QB",
x = "Average Yards",
subtitle = "Top 15",
caption = "Data: @nflfastR"
)+
theme(
plot.title = element_text(face = "bold"),
plot.tiele.position = "plot",
axis.title.y = element_blank(),
axis.text.y.left = element_nfl_headshot(size = 1)
)+
scale_x_continuous(breaks = seq(1, 10, 1))
ggsave("averageydsqb.png",
path = "/Users/jakeblumengarten/git_repository/nfl_analysis/plots/",
width = 10,
height = 10,
dpi = 300,
bg = "white")
install.packages("cfbplotR")
version
install_github(repo = "sportsdataverse/cfbfastR")
remotes::install_github(repo = "sportsdataverse/cfbfastR")
remotes::install_github(repo = "Kazink36/cfbplotR")
library(cfbfastR)
library(cfbplotR)
pbp <- cfbfastR::load_cfb_pbp(2021) %>%
filter(week == 1)
team_info <- cfbfastR::cfbd_team_info()
install.packages("cfbfastR")
library(cfbfastR)
library(cfbplotR)
